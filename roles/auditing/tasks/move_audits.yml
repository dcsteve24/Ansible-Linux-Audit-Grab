---
#This task scps the audit files off of the hypervisors onto sol, so sol can then copy them to the share in a different play
#Since the move command will error and stop further actions, I do not have a check in place before deleting. If it don't complete the entire move, it wont delete.

#First copy off everything
- name: Move_Audits | Set the audits_list variable
  find:
    paths: "{{ log_root_path }}"
    recurse: yes
  register: audits_list

- name: Move_Audits | Grab Local Date and Time
  set_fact:
    date_time: "{{ lookup('pipe', 'date +%Y-%m-%d_%H%M') }}"

- name: Move_Audits | Set Date/Time on Audit Path
  set_fact:
    audit_path: "{{ mount_point }}{{ date_time }}"

- name: Move_Audits | Copy the files off of target(s) and into the mounted shared drive
  fetch:
    src: "{{ item.path }}"
    dest: "{{ audit_path }}"
  no_log: true
  changed_when: false
  loop: "{{ audits_list.files }}"
  when: item.path != "/var/log/lastlog"

#Now delete rotated logs
#Added line to delete odd journal entries starting with @
- name: Move_Audits | Set the delete_me list variable
  find:
    paths: "{{ log_root_path }}"
    recurse: yes
    patterns:
      - ".*(100|[0-9]{1,2})%?.*"
      - "^.*@.*"
    use_regex: true
    excludes:
      - "krb5_child.log"
      - "atlas2-vm.log"
      - "fail2ban.log"
  register: delete_me

- name: Move_Audits | Deletes the rotated logs
  file:
    state: absent
    path: "{{ item.path }}"
  no_log: true
  changed_when: false
  loop: "{{ delete_me.files }}"

#-------Debug--------
#- name: Move_Audits | Debug the file lists
#  debug:
#    msg: "{{ item }}"
#  loop:
#    - "{{ delete_me }}"

#Now erase anything left
- name: Move_Audits | Set the erase_me list variable
  find:
    paths: "{{ log_root_path }}"
    recurse: yes
    patterns:
  register: erase_me

- name: Move_Audits | Erase currently used log files
  shell: "cat /dev/null > {{ item.path }}"
  no_log: true
  changed_when: false
  loop: "{{ erase_me.files }}"
  notify: restart syslog

- name: Move_Audits | Unmount the Share
  mount:
    state: absent
    path: "{{ mount_point }}"
    src: "{{ shared_drive }}"
    fstype: cifs
